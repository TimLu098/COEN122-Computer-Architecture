2:1 mux

module twoToOne(B,neg,outB);

input B;
input neg; //sel=neg

wire SN,output1,outpu2;

output outB;

not(SN,neg);

and(output1,B,SN);
and(output2,neg,0);

or(outB,output1,output2);

endmodule


module oneBitAdder(A,B,cin,cout,out);
input A,B,cin;
output S,cout;
wire w1,w2,w3;

assign w1= A ^ B;

and(w2,w1,cin);
and(w3,A,B);

assign out= w1 ^ cin;
assign cout= w2 | w3;

endmodule

module fullAdder(A,B,cout,sum);
input[31:0]A,B;
output[31:0]sum;
output cout;

wire [31:0];

oneBitAdder x1(A[0], B[0], 1'b0, sum[0], output)


negate

in order to get negative A flip all the bit to get the value

not gate ()
ao to 31 
 add 1 to that result


module threeToOne(A,)

